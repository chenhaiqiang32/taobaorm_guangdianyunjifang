import{_ as __vitePreload}from"./main-ea9b4754.js";import"./weather-0f46f733.js";const TransformMap={sunny:"SUNNY",rain:"RAIN",snow:"SNOW",day:"DAY",night:"NIGHT",science:"SCIENCE"},onMessage=async()=>{const[{SUNNY,RAIN,SNOW,DAY,NIGHT,SCIENCE},{doFenceData,equipData,inspectionData,personDangerData,gatherDangerDate,sceneChange,searchData,realTimeData,dangerHistoryData}]=await Promise.all([__vitePreload(()=>import("./weather-0f46f733.js").then(e=>e.bC),["./weather-0f46f733.js","./main-ea9b4754.js","./index-f62c43dc.css"],import.meta.url),__vitePreload(()=>import("./dataProgress-6bc4c9c9.js"),["./dataProgress-6bc4c9c9.js","./weather-0f46f733.js","./main-ea9b4754.js","./index-f62c43dc.css"],import.meta.url)]);Object.keys(TransformMap).forEach(key=>{TransformMap[key]=eval(TransformMap[key])});const waitForStore3D=()=>new Promise(e=>{const t=()=>{window.Core?e(window.Core):setTimeout(t,100)};t()}),core=await waitForStore3D();window.addEventListener("message",e=>{if(!core){console.warn("Store3D 实例尚未初始化");return}if(e.data&&e.data.cmd)switch(e.data.cmd){case"changeLighting":{const a=TransformMap[e.data.param];if(!a){console.warn("无效的光照参数:",e.data.param);return}core.changeLighting(a);break}case"changeWeather":{const a=e.data.param;if(!a||!a.type){console.warn("无效的天气参数:",a);return}core.ground.switchWeather({type:a.type,level:a.level});break}case"close":{core._stopRender();break}case"open":{core._beginRender();break}case"setCameraState":{core.setCameraState(e.data.param);break}case"changeSystem":{core.changeSystem(e.data.param);break}case"setWanderState":{e.data.param?core.beginWander():core.endWander();break}case"startMeasuring":{core.startMeasuring();break}case"removeMeasuring":{core.removeMeasuring();break}case"startMeasureArea":{core.startMeasureArea();break}case"removeMeasureArea":{core.removeMeasureArea();break}case"setHeatmap":{core.setHeatmap(e.data.param);break}case"init":{core.orientation.init(e.data.param);let a=core.orientation.followId;a&&core.followCheck(e,a);break}case"getInspectin":{let a=inspectionData(e.data.param);core.search(a);break}case"removeInset":{core.clearEquipType(e.data.param);break}case"getCameraList":{const{data:a}=e.data.param;let r=equipData(a);core.processingEquipment(r,"camera");break}case"inspectionSystem_initialData":let t=equipData(e.data.param);core.processingEquipment(t,"inspectionSystem");break;case"hideInspectionSystemIcon":core.hideInspectionSystemIcon(e.data.param);case"getBeaconList":{const{data:a}=e.data.param;let r=equipData(a);core.processingEquipment(r,"beacon");break}case"trackInit":case"trackStart":case"trackStop":case"trackSpeedUp":case"trackSpeedDown":case"trackProgress":case"trackAngleSwitch":case"trackClear":{core.historyTrackCommand(e.data);break}case"buildingNumber":{let a=e.data.param;core.changeBuildingNum(a);break}case"buildingList":{e.data.param;break}case"cherryPick":{core.cherryPick(e.data.param);break}case"startSelect":{core.changeBoxSelect(e.data.param);break}case"reSelect":{core.reSelect();break}case"fenceList":{e.data.param.data.map(a=>{const{id:r,name:c,type:s}=a;let o={fenceData:doFenceData(a),id:r,name:c,type:"area"};core.createFence(o)});break}case"cancelDrawFence":{core.clearFence();const a=core.currentSystem.resetCamera?core.currentSystem.resetCamera.bind(core.currentSystem):null;a&&a();break}case"startSearch":{let a=searchData(e.data.param);core.search(a);break}case"closeDialog":{core.isIndoorModel()&&(core.hideBuildingDialog(),core.setIndoorModel(!1));let a=e.data.param;core.ground.boxSelectStatus||core.bindGroundEvent(),core.clearSelected(a);break}case"personFollow":const{id:l,sceneType:n,originId:i}=e.data.param;let m=sceneChange({sceneType:n,originId:i});core.startFollow({id:l,originId:i,sceneType:n,sceneChangeType:m});break;case"removePersonFollow":{core.bindSearchEvent(),core.cancelFollow();break}case"changeBuildingFloor":{core.changeFloor(e.data.param);break}case"goBack":{core.changeSystem("ground");break}case"removeAllPerson":{core.clearAllPerson();break}case"personDanger":{let a=personDangerData(e.data.param);core.search(a);break}case"areaDanger":{const{fenceData:a,id:r,name:c,type:s,originId:d,sceneType:o}=e.data.param;let p={fenceData:doFenceData(e.data.param),id:r,name:c,type:"danger"};core.dangerFenceInit(p);break}case"clearDanger":{core.clearDanger();break}case"closeBuildingDialog":{let a=e.data.param;core.bindGroundEvent(),core.hideBuildingDialog(a);break}case"closeCameraDialog":{core.isIndoorModel()&&(core.hideBuildingDialog(),core.setIndoorModel(!1));let a=e.data.param;core.bindGroundEvent(),core.hideCameraDialog(a);break}case"hideCameraIcon":{core.hideCameraById(e.data.param);break}case"mouseEventSwitch":core.changeMouseEventSwitch(e.data.param);break;case"switchGather":{core.switchGatherStatus(e.data.param);break}case"setGatherLevel":{core.setGatherLevel(e.data.param);break}case"roamEnabled":{core.roamEnabled(e.data.param);break}case"roamDuration":{core.roamDuration(e.data.param);break}case"gatherDanger":{let a=gatherDangerDate(e.data.param);core.gatherWarning.gatherDanger(a);break}case"gatherNow":{let a=realTimeData(e.data.param);core.gatherWarning.realTimeGather(a);break}case"clearGatherDanger":{core.gatherWarning.disposeGather();break}case"factoryChange":{let a=core.currentSystem.clearBuildingFence?core.currentSystem.clearBuildingFence.bind(core.currentSystem):null;a&&a();const r=doFenceData(e.data.param[0]),{id:c,name:s,type:d}=e.data.param[0];let o={fenceData:r,id:c,name:s,type:"building"};core.createFence(o);break}case"gatherOrSilentArea":{e.data.param.forEach(a=>{a.areaDataOut.push(a.areaDataOut[0]),core.ground.gatherOrSilentPlate.create(a),a.areaType===3&&core.indoorSubsystem.setFloorGatherOrSilent(a)});break}case"clearGatherOrSilentArea":{core.ground.gatherOrSilentPlate.dispose(),core.indoorSubsystem.disposeGatherOrSilent();break}case"escapeRoute":{core.ground.escapeRoute.init(e.data.param);break}case"clearEscapeRoute":{core.ground.escapeRoute.dispose();break}case"meetingPoint":{e.data.param.forEach((a,r)=>{core.ground.meetingPoint.create({id:r,name:String(r),position:a})});break}}})};export{onMessage};
